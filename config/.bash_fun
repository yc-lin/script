#!/bin/bash

function git_diff() {
    git diff --no-ext-diff -w "$@" | vim -R -
}

function git_branch {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return;
    echo ${ref#refs/heads/}
}

function baseff()
{
  local fullpath=$*
  local filename=${fullpath##*/} # remove "/" from the beginning
  filename=${filename##*./} # remove  ".../" from the beginning
  # Only the filename without path is needed
  # filename should be reasonable
  local cli=`find . \
    -not -iwholename '*.svn*' \
    -not -iwholename '*.git*' \
    -not -iwholename '*.o*' \
    -not -iwholename '*.hg*'\
    -type f -path '*'${filename}'*' -print | peco`
  # convert relative path to full path
  #echo ${cli}
  #echo $(cd $(dirname $cli); pwd)/$(basename $cli)
  
  local ff_full=""
  local ifs_bak=${IFS}
  ffl=""
  ffs=""
  ffc=0
  IFS=$'\n'
  for ff in ${cli}; do
    ff_full="$(cd $(dirname ${ff}); pwd)/$(basename ${ff})"
    ffl+="${ff_full} "
    ffs+="${ff_full}\\n"
    ffc=$((${ffc} + 1))
  done
  IFS=${ifs_bak}
  export FFS="${ffs}" 
  export FFL="${ffl}" 
  export FFC="${ffc}" 
  echo -e "${ffs}"
}

function ff()
{
  baseff
}

function ffc()
{
  ff
  if [[ -z "${FFL// }" ]]; then
    export FFCS=""
    export FFCL=""
    return 0
  fi

  local ffl=""
  if [ $FFC -eq 1 ]; then 
    ffl=${FFL//[[:space:]]/}
  else
    ffl=${FFL}
  fi

  local cli=$(cat ${ffl} | peco)

  local ifs_bak=${IFS}
  ffcl=""
  ffcs=""
  IFS=$'\n'
  for ff in ${cli}; do
    ff_full="$(cd $(dirname ${ff}); pwd)/$(basename ${ff})"
    ffcl+="${ff} "
    ffcs+="${ff}\\n"
  done
  IFS=${ifs_bak}
  export FFCS="${ffcs}" 
  export FFCL="${ffcl}" 
  echo -e "${ffcs}"
}

function fvi()
{
  local cli=`baseff $*`
  if [[ -z "${cli// }" ]]; then
    return 0
  fi
  vim ${cli}

}

function fe()
{
  local cli=`baseff $*`
  if [[ -z "${cli// }" ]]; then
    return 0
  fi
  emacsw ${cli}
}
